import { isValidReviewComment, hasCriticalIssues } from './src/utils';

console.log('=== TESTES DE CASOS ESPEC√çFICOS ===\n');

// Teste 1: Coment√°rio sobre tipo de retorno (deve ser aceito)
const returnTypeComment = `
‚ö†Ô∏è ERROS GRAVES:

**lib/services/api_service.dart:**
- M√©todo getUserData() definido como retornando User?, mas pode retornar null sem verifica√ß√£o adequada, causando potencial null pointer exception.
`.trim();

console.log('1. Teste de tipo de retorno:');
console.log('isValidReviewComment:', isValidReviewComment(returnTypeComment, false));
console.log('');

// Teste 2: Coment√°rio sobre async/await (deve ser aceito)
const asyncComment = `
üö® ERROS GROTESCOS:

**lib/controller/login_controller.dart:**
- Future mal implementado no m√©todo loginUser(), pode causar crash quando await √© usado incorretamente.
`.trim();

console.log('2. Teste de async/await:');
console.log('isValidReviewComment:', isValidReviewComment(asyncComment, false));
console.log('');

// Teste 3: Coment√°rio sobre widget sem problema t√©cnico (deve ser rejeitado se n√£o for t√©cnico)
const widgetComment = `
O widget foi alterado para usar um Container ao inv√©s de um SizedBox. Isso pode afetar a performance levemente.
`.trim();

console.log('3. Teste de widget sem problema t√©cnico:');
console.log('isValidReviewComment:', isValidReviewComment(widgetComment, false));
console.log('');

// Teste 4: Coment√°rio sobre widget com problema t√©cnico (deve ser aceito)
const widgetTechnicalComment = `
üö® ERROS GROTESCOS:

**lib/widgets/custom_button.dart:**
- Widget retorna null em algumas condi√ß√µes, causando runtime error na UI.
`.trim();

console.log('4. Teste de widget com problema t√©cnico:');
console.log('isValidReviewComment:', isValidReviewComment(widgetTechnicalComment, false));
console.log('');

// Teste 5: Coment√°rio sobre complexidade (deve ser aceito)
const complexityComment = `
üîç L√ìGICAS COMPLEXAS:

**lib/utils/validator.dart:**
- M√©todo validateForm() possui mais de 50 linhas e complexidade ciclom√°tica alta, dificultando manuten√ß√£o.
`.trim();

console.log('5. Teste de complexidade:');
console.log('isValidReviewComment:', isValidReviewComment(complexityComment, false));
console.log('');

// Teste 6: Coment√°rio sobre state management (deve ser aceito)
const stateComment = `
‚ö†Ô∏è ERROS GRAVES:

**lib/controller/product_controller.dart:**
- MobX @observable n√£o implementado corretamente, pode causar problemas de state management.
`.trim();

console.log('6. Teste de state management:');
console.log('isValidReviewComment:', isValidReviewComment(stateComment, false));
console.log('');

// Teste 7: Coment√°rio sobre dependency injection (deve ser aceito)
const diComment = `
‚ö†Ô∏è ERROS GRAVES:

**lib/controller/user_controller.dart:**
- Controller n√£o injetado via GetIt, violando padr√£o arquitetural estabelecido.
`.trim();

console.log('7. Teste de dependency injection:');
console.log('isValidReviewComment:', isValidReviewComment(diComment, false));
console.log('');

// Teste 8: Coment√°rio misturado com conte√∫do irrelevante (deve ser rejeitado)
const mixedIrrelevantComment = `
A vers√£o foi alterada e a legibilidade do c√≥digo foi reduzida. Embora isso n√£o seja um bug, o m√©todo pode ter problemas t√©cnicos.
`.trim();

console.log('8. Teste de coment√°rio misturado irrelevante:');
console.log('isValidReviewComment:', isValidReviewComment(mixedIrrelevantComment, false));
console.log('');

// Teste 9: Coment√°rio sobre problema de build (deve ser aceito)
const buildComment = `
üö® PROBLEMAS CR√çTICOS DE BUILD:

**android/app/build.gradle:**
- Depend√™ncia incompat√≠vel que pode quebrar o build em produ√ß√£o.
`.trim();

console.log('9. Teste de problema de build:');
console.log('isValidReviewComment:', isValidReviewComment(buildComment, true));
console.log('');

// Teste 10: Coment√°rio sobre arquivo de plataforma sem problema cr√≠tico (deve ser rejeitado)
const platformNonCriticalComment = `
Pequenos ajustes de configura√ß√£o foram feitos no AndroidManifest.xml.
`.trim();

console.log('10. Teste de plataforma sem problema cr√≠tico:');
console.log('isValidReviewComment:', isValidReviewComment(platformNonCriticalComment, true));
console.log('');
