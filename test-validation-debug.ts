import { isValidReviewComment, hasCriticalIssues } from './src/utils';

console.log('=== TESTE DE VALIDA√á√ÉO DE COMENT√ÅRIOS ===\n');

// Teste do caso do m√©todo validarSDK
const validarSDKComment = `
‚ö†Ô∏è ERROS GRAVES:

**lib/app/utils/utils.dart:**
- M√©todo \`validarSDK()\` n√£o retorna um valor, mas est√° definido como retornando \`int\`. Isso pode causar problemas em runtime se o valor de retorno for utilizado.

üîç L√ìGICAS COMPLEXAS:

**lib/app/utils/utils.dart:**
- M√©todo \`validarSDK()\` possui l√≥gica complexa com m√∫ltiplas condi√ß√µes aninhadas, dificultando a manuten√ß√£o e compreens√£o do c√≥digo.
`.trim();

console.log('1. Teste do m√©todo validarSDK:');
console.log('Input:', validarSDKComment);
console.log('hasCriticalIssues:', hasCriticalIssues(validarSDKComment));
console.log('isValidReviewComment:', isValidReviewComment(validarSDKComment, false));
console.log('');

// Teste de coment√°rio sobre versionamento (deve ser rejeitado)
const versionComment = `
O n√∫mero da vers√£o foi alterado de 1.0.0 para 1.0.1. Embora isso n√£o seja um bug, recomenda-se usar uma conven√ß√£o de versionamento consistente.
`.trim();

console.log('2. Teste de coment√°rio sobre versionamento:');
console.log('Input:', versionComment);
console.log('hasCriticalIssues:', hasCriticalIssues(versionComment));
console.log('isValidReviewComment:', isValidReviewComment(versionComment, false));
console.log('');

// Teste de coment√°rio sobre legibilidade (deve ser rejeitado)
const legibilityComment = `
O c√≥digo teve sua legibilidade ligeiramente reduzida. Considera-se uma revis√£o da estrutura anterior para manter a clareza.
`.trim();

console.log('3. Teste de coment√°rio sobre legibilidade:');
console.log('Input:', legibilityComment);
console.log('hasCriticalIssues:', hasCriticalIssues(legibilityComment));
console.log('isValidReviewComment:', isValidReviewComment(legibilityComment, false));
console.log('');

// Teste de coment√°rio t√©cnico v√°lido (deve ser aceito)
const technicalComment = `
üö® ERROS GROTESCOS:

**lib/controller/home_controller.dart:**
- M√©todo \`fetchData()\` pode causar null pointer exception quando \`response.data\` √© null.
- Async/await implementado incorretamente, causando crash da aplica√ß√£o.
`.trim();

console.log('4. Teste de coment√°rio t√©cnico v√°lido:');
console.log('Input:', technicalComment);
console.log('hasCriticalIssues:', hasCriticalIssues(technicalComment));
console.log('isValidReviewComment:', isValidReviewComment(technicalComment, false));
console.log('');

// Teste de coment√°rio misto (tem conte√∫do t√©cnico E irrelevante)
const mixedComment = `
O n√∫mero da vers√£o foi alterado. Embora isso n√£o seja um bug, tamb√©m identifiquei que o m√©todo pode causar null pointer exception quando usado incorretamente.
`.trim();

console.log('5. Teste de coment√°rio misto:');
console.log('Input:', mixedComment);
console.log('hasCriticalIssues:', hasCriticalIssues(mixedComment));
console.log('isValidReviewComment:', isValidReviewComment(mixedComment, false));
console.log('');

// Teste de coment√°rio "Nenhum problema cr√≠tico encontrado" (deve ser rejeitado)
const noIssuesComment = `
Nenhum problema cr√≠tico encontrado.
`.trim();

console.log('6. Teste de coment√°rio "Nenhum problema cr√≠tico encontrado":');
console.log('Input:', noIssuesComment);
console.log('hasCriticalIssues:', hasCriticalIssues(noIssuesComment));
console.log('isValidReviewComment:', isValidReviewComment(noIssuesComment, false));
console.log('');
